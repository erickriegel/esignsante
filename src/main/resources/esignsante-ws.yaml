openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
-  description: SwaggerHub API Auto Mocking
   url: https://esignsante.asipsante.fr{basePath}/
   variables:
      port:
         enum:
         - '8080'
         default: '8080'
      basePath:
         default: /
info:
   description: "API du composant eSignSante. <br>Ce composant dit de \"signature\" mutualise et homogénéise la mise en oeuvre\
      \ des besoins autour de la signature. <br>Il permet de signer des documents ainsi que\
      \ de vérifier la validité d'une signature ou d'un certificat.    <br>"
   version: 2.3.0.0
   title: eSignSante
   contact:
      email: esignsante@asipsante.fr
tags:
-  name: client
   description: Ressources offertes au client.
-  name: ca
   description: Ressource pour obtenir la liste des autorités de certification utilisées pour signer ou vérifier une signature
      ou un certificat.
-  name: configurations
   description: Ressource permettant de lister les différentes configurations disponibles au client.
-  name: xmldsig
   description: Ressources permettant de signer un document au format XMLDsig et/ou de vérifier un flux signé en XMLDsig avec
      ou sans preuve.
-  name: xades
   description: Ressources permettant de signer un document au format Xades Baseline B et/ou de vérifier un flux signé en
      XADES Baseline B avec ou sans preuve.
-  name: certificats
   description: Ressources permettant de vérifier un certificat avec ou sans preuve.
paths:
   /:
      get:
         summary: Liste des opérations disponibles.
         operationId: getOperations
         description: "Opération qui permet au client de lister les opérations offertes par le composant ANS Sign.      \
            \         <br>"
#         tags:
#         - client
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           type: string
            '400':
               description: Requête mal formée.
            '500':
               description: Erreur interne du serveur.
   /secrets:
      post:
#         tags:
#         - secrets
         summary: Generation d'un Hash sécurisé à partir du secret
         operationId: generateSecureSecretHash
         description: |
            L'opération permet au client de générer un Hash à partir du secret.
         requestBody:
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Secret'
            required: true
         responses:
            '200':
               description: Hash du secret généré.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/HashedSecret'
   /configurations:
      get:
         summary: Liste des configurations disponibles.
         operationId: getConfigurations
         description: "Opération qui permet au client de récupérer les configurations disponibles afin qu'il puisse utiliser\
            \ la configuration qui correspond à l'usage souhaité.   <br>"
#         tags:
#         - configurations
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/Conf'
            '400':
               description: Requête mal formée.
            '500':
               description: Erreur interne du serveur.
   /ca:
      get:
         summary: Liste des Autorités de Certification de confiance utilisées par la plateforme.
         operationId: getCA
         description: |
            Opération qui permet au client de prendre connaissance des Autorités de Certification de confiance utilisées par la plateforme.
#         tags:
#         - ca
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           type: string
            '400':
               description: Requête mal formée
            '500':
               description: Erreur interne du serveur.
   /signatures/xmldsig:
      post:
#         tags:
#         - xmldsig
         summary: Signature d'un document au format XMLdsig
         operationId: signatureXMLdsig
         description: |
            L'opération permet au client de signer un document au format XMLDsig-core-1.
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/SignDocument'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteSignatureReport'
            '400':
               description: Requête mal formée.
            '401':
               description: Une authentification est nécessaire pour accéder à la ressource (secret incorrect).
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /signatures/xmldsigwithproof:
      post:
#         tags:
#         - xmldsig
         summary: Signature d'un document au format XMLdsig avec preuve
         operationId: signatureXMLdsigWithProof
         description: "L'opération permet au client de signer un document au format XMLDsig-core-1 ainsi que de générer une\
            \ preuve de vérification de signature. <br>Le client peut demander la vérification des règles applicables suivantes:<br>\
            \ &nbsp;&nbsp;&nbsp;validité de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;présence de la balise \"SigningTime\" dans la signature;<br>   \
            \ &nbsp;&nbsp;&nbsp;présence du certificat utilisé dans la signature; <br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage\
            \ de la clé du certificat correspond à un usage de signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat\
            \ de signature n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification\
            \ est reconnue;<br>&nbsp;&nbsp;&nbsp;le contenu de la signature est valide;<br><br>  Le client peut également demander l'extraction des\
            \ métadonnées suivantes: <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>  \
            \ &nbsp;&nbsp;&nbsp;le document original non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/SignDocumentWithProof'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteSignatureReportWithProof'
            '400':
               description: Requête mal formée.
            '401':
               description: Une authentification est nécessaire pour accéder à la ressource (secret incorrect).
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /signatures/xadesbaselineb:
      post:
#         tags:
#         - xades
         summary: Signature d'un document au format Xades Baseline B.
         operationId: signatureXades
         description: |
            L'opération permet au client de signer un document au format XADES Baseline B.
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/SignDocument'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteSignatureReport'
            '400':
               description: Requête mal formée.
            '401':
               description: Une authentification est nécessaire pour accéder à la ressource (secret incorrect).
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /signatures/xadesbaselinebwithproof:
      post:
#         tags:
#         - xades
         summary: Signature d'un document au format Xades Baseline B avec preuve.
         operationId: signatureXadesWithProof
         description: "L'opération permet au client de signer un document au format XADES Baseline B ainsi que de générer une\
            \ preuve de vérification de signature.<br> Le client peut demander la vérification des règles applicables suivantes:<br>\
            \  &nbsp;&nbsp;&nbsp;validité de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;présence de la balise \"SigningTime\" dans la signature;<br>&nbsp;&nbsp;&nbsp;\
            \ présence du certificat utilisé dans la signature; <br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage\
            \ de la clé du certificat correspond à un usage de signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat\
            \ de signature n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification\
            \ est reconnue;<br>&nbsp;&nbsp;&nbsp;le contenu de la signature est valide;<br><br>  Le client peut également demander l'extraction des\
            \ métadonnées suivantes: <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>\
            \ &nbsp;&nbsp;&nbsp;le document original non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/SignDocumentWithProof'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteSignatureReportWithProof'
            '400':
               description: Requête mal formée.
            '401':
               description: Une authentification est nécessaire pour accéder à la ressource (secret incorrect).
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /validation/signatures/xmldsig:
      post:
#         tags:
#         - xmldsig
         summary: Vérification de signature au format XMLdsig.
         operationId: verifSignatureXMLdsig
         description: "L'opération permet au client de vérifier une signature au format XMLDsig-core-1. <br>  Le client peut\
            \ demander la vérification des règles applicables suivantes:<br>&nbsp;&nbsp;&nbsp;validité de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;pré\
            sence de la balise \"SigningTime\" dans la signature;<br>&nbsp;&nbsp;&nbsp;présence du certificat utilisé dans la signature; <br>\
            \ &nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage de la clé du certificat correspond à un usage de\
            \ signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une\
            \ signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification est reconnue;<br>&nbsp;&nbsp;&nbsp;le contenu de la signature est\
            \ valide;<br><br>  Le client peut également demander l'extraction des métadonnées suivantes: <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>\
            \ &nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>&nbsp;&nbsp;&nbsp;le document original non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifSignDocument'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReport'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur (vérifier que le document est au bon format XML).
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /validation/signatures/xmldsigwithproof:
      post:
#         tags:
#         - xmldsig
         summary: Vérification de signature au format XMLdsig avec preuve
         operationId: verifSignatureXMLdsigWithProof
         description: "L'opération permet au client de vérifier une signature au format XMLDsig-core-1 ainsi que de générer une\
            \ preuve de vérification. <br>  Le client peut demander la vérification des règles applicables suivantes:<br>&nbsp;&nbsp;&nbsp;validité\
            \ de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;présence de la balise \"SigningTime\" dans la signature;<br>&nbsp;&nbsp;&nbsp;présence du\
            \ certificat utilisé dans la signature; <br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage de la clé\
            \ du certificat correspond à un usage de signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat de signature\
            \ n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification est reconnue;<br>\
            \  &nbsp;&nbsp;&nbsp;le contenu de la signature est valide;<br><br>  Le client peut également demander l'extraction des métadonnées suivantes:\
            \ <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>&nbsp;&nbsp;&nbsp;le document original\
            \ non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifSignDocumentWithProof'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReportWithProof'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /validation/signatures/xadesbaselineb:
      post:
#         tags:
#         - xades
         summary: Vérification de signature au format Xades Baseline B.
         operationId: verifSignatureXades
         description: "L'opération permet au client de vérifier une signature au format Xades Baseline B. <br>  Le client peut\
            \ demander la vérification des règles applicables suivantes:<br>&nbsp;&nbsp;&nbsp;validité de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;Pré\
            sence de la balise \"SigningTime\" dans la signature;<br>&nbsp;&nbsp;&nbsp;présence du certificat utilisé dans la signature; <br>\
            \  &nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage de la clé du certificat correspond à un usage de\
            \ signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une\
            \ signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification est reconnue;<br>&nbsp;&nbsp;&nbsp;le contenu de la signature est\
            \ valide;<br><br>  Le client peut également demander l'extraction des métadonnées suivantes: <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>\
            \ &nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>&nbsp;&nbsp;&nbsp;le document original non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifSignDocument'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReport'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (soumission d'un document qui n'est pas au format
                  XML pour une signature enveloppée par exemple).
            '503':
               description: Le service n'est pas disponible.
   /validation/signatures/xadesbaselinebwithproof:
      post:
#         tags:
#         - xades
         summary: Vérification de signature au format Xades Baseline B avec preuve.
         operationId: verifSignatureXadesWithProof
         description: "L'opération permet au client de vérifier une signature au format Xades Baseline B ainsi que de générer\
            \ une preuve de vérification. <br>  Le client peut demander la vérification des règles applicables suivantes:<br> \
            \ &nbsp;&nbsp;&nbsp;validité de la signature du certificat;<br>&nbsp;&nbsp;&nbsp;présence de la balise \"SigningTime\" dans la signature;<br>&nbsp;&nbsp;&nbsp;pré\
            sence du certificat utilisé dans la signature; <br>&nbsp;&nbsp;&nbsp;le certificat de signature n'est pas expiré; <br>&nbsp;&nbsp;&nbsp;l'usage de\
            \ la clé du certificat correspond à un usage de signature électronique et de non répudiation;<br>&nbsp;&nbsp;&nbsp;le certificat\
            \ de signature n'est pas révoqué; <br>&nbsp;&nbsp;&nbsp;présence d'une signature qui n'est pas vide; <br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification\
            \ est reconnue;<br>&nbsp;&nbsp;&nbsp;le contenu de la signature est valide;<br><br>  Le client peut également demander l'extraction des\
            \ métadonnées suivantes: <br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;la date de signature;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique;<br>  \
            \ &nbsp;&nbsp;&nbsp;le document original non signé.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifSignDocumentWithProof'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReportWithProof'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: L'opération n'est pas supportée par le serveur (demande de validation d'un document qui n'est
                  pas au format XML).
            '503':
               description: Le service n'est pas disponible.
   /validation/certificats:
      post:
#         tags:
#         - certificats
         summary: Vérification d'un certificat au format DER ou PEM.
         operationId: verifCertificat
         description: "L'opération permet au client de vérifier la validité d'un certificat. <br> Le client peut demander la\
            \ vérification des règles applicables suivantes:<br>&nbsp;&nbsp;&nbsp;le certificat n'est pas expiré;<br>&nbsp;&nbsp;&nbsp;le certificat n'est pas\
            \ révoqué;<br>&nbsp;&nbsp;&nbsp;la signature du certificat est valide;<br>&nbsp;&nbsp;&nbsp;l'Autorité de Certification est reconnue.<br><br> Le client\
            \ peut également demander l'extraction des métadonnées suivantes:<br>&nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifCertDocument'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReport'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: Erreur dans le fichier envoyé (ne correspond pas à un certificat par exemple).
            '503':
               description: Le service n'est pas disponible.
   /validation/certificatswithproof:
      post:
#         tags:
#         - certificats
         summary: Vérification de certificat au format DER ou PEM avec preuve.
         operationId: verifCertificatWithProof
         description: "L'opération permet au client de vérifier la validité d'un certificat ainsi que de générer une preuve\
            \ de vérification. <br>  Le client peut demander la vérification des règles applicables suivantes:<br>&nbsp;&nbsp;&nbsp;Le certificat\
            \ n'est pas expiré;<br>&nbsp;&nbsp;&nbsp;le certificat n'est pas révoqué;<br>&nbsp;&nbsp;&nbsp;la signature du certificat est valide;<br>&nbsp;&nbsp;&nbsp;l'Autorité\
            \ de Certification est reconnue.<br> Le client peut également demander l'extraction des métadonnées suivantes:<br>\
            \ &nbsp;&nbsp;&nbsp;le DN du certificat;<br>&nbsp;&nbsp;&nbsp;le rapport du diagnostique.<br>"
         requestBody:
            content:
               multipart/form-data:
                  schema:
                     $ref: '#/components/schemas/VerifCertDocumentWithProof'
            required: true
         responses:
            '200':
               description: Requête en succès.
               content:
                  application/json:
                     schema:
                        type: object
                        $ref: '#/components/schemas/ESignSanteValidationReportWithProof'
            '400':
               description: Requête mal formée.
            '404':
               description: Ressource introuvable (identifiant de configuration qui n'existe pas par exemple).
            '500':
               description: Erreur interne du serveur.
            '501':
               description: Erreur dans le fichier envoyé (ne correspond pas à un certificat par exemple).
            '503':
               description: Le service n'est pas disponible.
components:
   schemas:
      Secret:
         type: object
         required:
         - plainSecret
         properties:
            plainSecret:
               description: Le secret.
               type: string
      HashedSecret:
         type: object
         required:
         - secureSecretHash
         properties:
            secureSecretHash:
               description: Le Hash du secret.
               type: string
      Conf:
         description: Listes des différentes configurations
         properties:
            signature:
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/ConfSign'
            signatureVerification:
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/ConfVerifSign'
            certificatVerification:
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/ConfVerifCert'
            proof:
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/ConfProof'
      Proof:
         type: object
         required:
         - requestId
         - proofTag
         - idProofConf
         - applicantId
         properties:
            requestId:
               description: Identifiant de la demande pour renseigner l'élément RequestId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            proofTag:
               description: Tag utilisé pour renseigner l'élément Tag de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            idProofConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la génération de la preuve (appel de l'opération "/configurations").
               type: integer
               format: int64
            applicantId:
               description: Identifiant du demandeur utilisé pour renseigner le champ applicantId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
      SignDocument:
         type: object
         required:
         - idSignConf
         - file
         properties:
            secret:
               description: Secret
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            idSignConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la signature (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Document à signer.
               type: string
               format: binary
      SignDocumentWithProof:
         type: object
         required:
         - idSignConf
         - file
         - idVerifSignConf
         - requestId
         - proofTag
         - applicantId
         properties:
            secret:
               description: Secret
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            idSignConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la signature (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Document à signer.
               type: string
               format: binary
            idVerifSignConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la vérification de signature (appel de l'opération "/configurations").
               type: integer
               format: int64
            requestId:
               description: Identifiant de la demande pour renseigner l'élément RequestId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            proofTag:
               description: Tag utilisé pour renseigner l'élément Tag de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            applicantId:
               description: Identifiant du demandeur utilisé pour renseigner le champ applicantId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
      VerifCertDocument:
         type: object
         required:
         - idVerifCertConf
         - file
         properties:
            idVerifCertConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la vérification de certificat (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Certificat à vérifier.
               type: string
               format: binary
      VerifCertDocumentWithProof:
         type: object
         required:
         - idVerifCertConf
         - file
         - requestId
         - proofTag
         - applicantId
         - idProofConf
         properties:
            idVerifCertConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la vérification de certificat (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Certificat à vérifier.
               type: string
               format: binary
            requestId:
               description: Identifiant de la demande pour renseigner l'élément RequestId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            proofTag:
               description: Tag utilisé pour renseigner l'élément Tag de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            applicantId:
               description: Identifiant du demandeur utilisé pour renseigner le champ applicantId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            idProofConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la génération de la preuve (appel de l'opération "/configurations").
               type: integer
               format: int64
      VerifSignDocument:
         type: object
         required:
         - idVerifSignConf
         - file
         properties:
            idVerifSignConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la vérification de signature (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Document à vérifier.
               type: string
               format: binary
      VerifSignDocumentWithProof:
         type: object
         required:
         - idVerifSignConf
         - file
         - requestId
         - proofTag
         - applicantId
         - idProofConf
         properties:
            idVerifSignConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la vérification de signature (appel de l'opération "/configurations").
               type: integer
               format: int64
            file:
               description: Document à vérifier.
               type: string
               format: binary
            requestId:
               description: Identifiant de la demande pour renseigner l'élément RequestId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            proofTag:
               description: Tag utilisé pour renseigner l'élément Tag de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            applicantId:
               description: Identifiant du demandeur utilisé pour renseigner le champ applicantId de la preuve.
               type: string
               pattern: ^[a-zA-Z_0-9\-]*$
            idProofConf:
               description: Identifiant de configuration à sélectionner parmi la liste des configurations disponibles pour
                  la génération de la preuve (appel de l'opération "/configurations").
               type: integer
               format: int64
      ConfSign:
         type: object
         required:
         - idSignConf
         - associatedProofId
         - description
         - signaturePackaging
         - digestAlgorithm
         - canonicalisationAlgorithm
         - dn
         properties:
            idSignConf:
               description: Identifiant de configuration. Cet identifiant est utilisé par les services de signature.
               type: integer
               format: int64
            associatedProofId:
               description: Identifiant de configuration de la preuve de validation associée.
               type: integer
               format: int64
            description:
               description: Description de la configuration de signature.
               type: string
            signaturePackaging:
               type: string
               enum: #
               - ENVELOPING #WithComments
               - ENVELOPED
            digestAlgorithm:
               type: string
               enum:
               - SHA1
               - SHA256
               - SHA512
            canonicalisationAlgorithm:
               type: string
               enum:
               - http://www.w3.org/TR/2001/REC-xml-c14n-20010315
               - http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments
               - http://www.w3.org/2001/10/xml-exc-c14n#
               - http://www.w3.org/2001/10/xml-exc-c14n#WithComments
            dn:
               description: DN du certificat qui sera utilisé pour signer le document #WithComments
               type: string
      ConfVerifSign:
         type: object
         required:
         - idVerifSignConf
         - description
         - rules
         - metaData
         properties:
            idVerifSignConf:
               description: Identifiant de configuration. Cet identifiant est utilisé par le service de vérification de signature.
               type: integer
               format: int64
            description:
               description: Description de la configuration de vérification de signature.
               type: string
            rules:
               description: Liste des règles qui seront utilisées pour vérifier la signature.
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/Rule'
            metaData:
               type: array
               description: Données complémentaires et paramétrables retournées par le service.
               items:
                  type: string
      ConfProof:
         type: object
         required:
         - idProofConf
         - description
         - signaturePackagingForProof
         - digestAlgorithmForProof
         - canonicalisationAlgorithmForProof
         - dn
         properties:
            idProofConf:
               description: Identifiant de configuration. Cet identifiant est utilisé par le service de génération de preuve.
               type: integer
               format: int64
            description:
               description: Description de la configuration de la génération de la preuve.
               type: string #WithComments
            signaturePackagingForProof:
               type: string
               enum: #
               - ENVELOPING #WithComments
               - ENVELOPED
            digestAlgorithmForProof: #WithComments
               type: string #
               enum: #WithComments
               - SHA1
               - SHA256
               - SHA512
            canonicalisationAlgorithmForProof:
               type: string
               enum:
               - http://www.w3.org/TR/2001/REC-xml-c14n-20010315 #WithComments
               - http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments
               - http://www.w3.org/2001/10/xml-exc-c14n#
               - http://www.w3.org/2001/10/xml-exc-c14n#WithComments
            dn:
               description: DN du certificat qui sera utilisé pour signer la preuve. #WithComments
               type: string #
      ConfVerifCert: #WithComments
         type: object
         required:
         - idVerifCertConf
         - description
         - rules
         properties:
            idVerifCertConf:
               description: Identifiant de configuration. Cet identifiant est utilisé par le services de vérification de certificat.
               type: integer
               format: int64
            description:
               description: Description de la configuration de vérification des certificats.
               type: string
            rules:
               type: array
               items:
                  type: object
                  $ref: '#/components/schemas/Rule'
            metaData:
               type: array
               description: Données complémentaires et paramétrables retournées par le service.
               items:
                  type: string
      Rule:
         type: object
         required:
         - id
         - description
         properties:
            id:
               type: string
            description:
               type: string
      ESignSanteSignatureReport:
         type: object
         required:
         - erreurs
         - docSigne
         properties:
            erreurs:
               type: array
               items:
                  $ref: '#/components/schemas/Erreur'
            docSigne:
               description: Le document signé encodé en base 64.
               type: string
      ESignSanteSignatureReportWithProof:
         type: object
         required:
         - erreurs
         - metaData
         - valide
         - docSigne
         - preuve
         properties:
            erreurs:
               type: array
               items:
                  $ref: '#/components/schemas/Erreur'
            metaData:
               type: array
               items:
                  $ref: '#/components/schemas/Metadata'
            valide:
               type: boolean
            docSigne:
               description: Le document signé encodé en base 64.
               type: string
            preuve:
               description: La preuve de vérification encodée en base 64.
               type: string
      ESignSanteValidationReport:
         type: object
         required:
         - erreurs
         - metaData
         - valide
         properties:
            erreurs:
               type: array
               items:
                  $ref: '#/components/schemas/Erreur'
            metaData:
               type: array
               items:
                  $ref: '#/components/schemas/Metadata'
            valide:
               type: boolean
      ESignSanteValidationReportWithProof:
         type: object
         required:
         - erreurs
         - metaData
         - valide
         - preuve
         properties:
            erreurs:
               type: array
               items:
                  $ref: '#/components/schemas/Erreur'
            metaData:
               type: array
               items:
                  $ref: '#/components/schemas/Metadata'
            valide:
               type: boolean
            preuve:
               description: La preuve de vérification encodée en base 64.
               type: string
      Erreur:
         required:
         - codeErreur
         - message
         properties:
            codeErreur:
               type: string
            message:
               type: string
      Metadata:
         description: Données complémentaires et paramétrables retournées par le service.
         required:
         - typeMetadata
         - message
         properties:
            typeMetadata:
               type: string
            message:
               type: string
